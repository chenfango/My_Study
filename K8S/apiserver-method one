---
apiVersion: v1
kind: Service
metadata:
  name: custom-metrics-apiserver
  namespace: monitoring
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 6443
  selector:
    app: custom-metrics-apiserver
  sessionAffinity: None
  type: ClusterIP
  
---
apiVersion: v1
kind: Endpoints
metadata:
  name: custom-metrics-apiserver
  namespace: monitoring
subsets:
- addresses:
  - ip: 30.69.179.157
    nodeName: 30.68.0.76
    targetRef:
      kind: Pod
      name: custom-metrics-apiserver-5bfbfff788-kvc2c
      namespace: monitoring
  ports:
  - port: 6443
    protocol: TCP
 
 ---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  generation: 1
  labels:
    k8s-app: apiserver
  name: kube-apiserver
  namespace: monitoring
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_controller_admission_latencies_seconds_.*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_step_admission_latencies_seconds_.*
      sourceLabels:
      - __name__
    port: https
    scheme: https
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      serverName: kubernetes
  jobLabel: component
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: custom-metrics-apiserver
  name: custom-metrics-apiserver
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: custom-metrics-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: custom-metrics-apiserver
      name: custom-metrics-apiserver
    spec:
      containers:
      - args:
        - --secure-port=6443
        - --tls-cert-file=/var/run/serving-cert/serving.crt
        - --tls-private-key-file=/var/run/serving-cert/serving.key
        - --logtostderr=true
        - --prometheus-url=http://prometheus-k8s.monitoring.svc:9090/prometheus/
        - --metrics-relist-interval=1m
        - --v=6
        - --config=/etc/adapter/config.yaml
        image: 30.68.0.4/prometheus/k8s-prometheus-adapter-amd64:v0.3.0
        imagePullPolicy: IfNotPresent
        name: custom-metrics-apiserver
        ports:
        - containerPort: 6443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/serving-cert
          name: volume-serving-cert
          readOnly: true
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
        - mountPath: /tmp
          name: tmp-vol
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: custom-metrics-apiserver
      serviceAccountName: custom-metrics-apiserver
      terminationGracePeriodSeconds: 30
      volumes:
      - name: volume-serving-cert
        secret:
          defaultMode: 420
          secretName: cm-adapter-serving-certs
      - configMap:
          defaultMode: 420
          name: adapter-config
        name: config
      - emptyDir: {}
        name: tmp-vol
