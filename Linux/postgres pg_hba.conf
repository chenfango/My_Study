http://www.postgres.cn/docs/9.4/auth-pg-hba-conf.html

local      database  user  auth-method  [auth-options]
host       database  user  address  auth-method  [auth-options]
hostssl    database  user  address  auth-method  [auth-options]
hostnossl  database  user  address  auth-method  [auth-options]
host       database  user  IP-address  IP-mask  auth-method  [auth-options]
hostssl    database  user  IP-address  IP-mask  auth-method  [auth-options]
hostnossl  database  user  IP-address  IP-mask  auth-method  [auth-options]

local
这条记录匹配企图通过 Unix 域套接字进行的连接。没有这种类型的记录，就不允许 Unix 域套接字的连接。

host
这条记录匹配企图通过 TCP/IP 进行的连接。host记录匹配 SSL和非SSL的连接请求。
注意: 除非服务器带着合适的listen_addresses配置参数值启动， 否则将不可能进行远程的 TCP/IP 连接，因为缺省的行为是只监听本地自环地址localhost的连接。

hostssl
这条记录匹配企图使用 TCP/IP 的 SSL 连接。但必须是使用SSL加密的连接。
要使用这个选项，编译服务器的时候必须打开SSL支持。 而且在服务器启动的时候必须打开ssl配置选项(参阅第 17.9 节)。

hostnossl
这条记录与hostssl行为相反：它只匹配那些在 TCP/IP 上不使用SSL的连接请求。

database
声明记录所匹配的数据库名称。值 all表明该记录匹配所有数据库， 值sameuser表示如果被请求的数据库和请求的用户同名，则匹配。 值samerole表示请求的用户必须是一个与数据库同名的角色中的成员。 (samegroup是一个已经废弃了，但目前仍然被接受的samerole同义词。) 对samerole来说，不认为超级用户是角色的一个成员，除非他们明确的是角色的成员， 直接的或间接的，并且不只是由于超级用户。值replication表示如果请求一个复制链接， 则匹配（注意复制链接不表示任何特定的数据库）。在其它情况里，这就是一个特定的 PostgreSQL数据库名字。可以通过用逗号分隔的方法声明多个数据库， 也可以通过前缀@来声明一个包含数据库名的文件。

user
为这条记录声明所匹配的数据库用户。值all表明它匹配于所有用户。否则， 它就是特定数据库用户的名字或者是一个前缀+的组名称。请注意， 在PostgreSQL里，用户和组没有真正的区别，+实际上只是意味着 "匹配任何直接或者间接属于这个角色的成员"，而没有+记号的名字只匹配指定的角色。 为此，超级用户如果明确是角色的成员，也只算是一个角色的成员，直接的或间接的，而不只是由于超级用户。 多个用户名可以通过用逗号分隔的方法声明。一个包含用户名的文件可以通过在文件名前面前缀 @来声明。

address
声明这条记录匹配的客户端机器地址。这个文件可以包含主机名、IP地址范围或下面提到的特殊关键字之一。
IP 地址范围用标准的范围起始地址数字符号、斜线(/)和一个 CIDR掩码长度声明。 掩码长度表示客户端 IP 地址必须匹配的高位二进制位数。在给出的 IP 地址里， 这个长度的右边的二进制位应该为零。在 IP 地址、/、 CIDR 掩码长度之间不能有空白。
典型的这种方式指定的IPv4地址范围举例：172.20.143.89/32表示一个主机， 172.20.143.0/24表示一个小子网，10.6.0.0/16 表示一个大子网。IPv6地址范围的主机看起来像::1/128 （这种情况下是IPv6的回调地址），fe80::7a31:c1ff:0000:0000/96 表示一个小子网。0.0.0.0/0代表所有IPv4地址， ::0/0代表所有IPv6地址。要声明单个主机， 给 IPv4 地址声明掩码长度 32 ，给 IPv6 地址声明 128 。 不要在地址中省略结尾的 0 。
以 IPv4 格式给出的记录将只能匹配 IPv4 连接， 一个以 IPv6 格式给出的记录将只匹配 IPv6 连接， 即使对应的地址在 IPv4-in-IPv6 范围内。请注意如果系统的 C 库不支持 IPv6 地址， 那么 IPv6 的格式将被拒绝。
你也可以写all来匹配所有IP地址，samehost 来匹配任意服务器IP地址，或samenet来匹配任何服务器直接连接到的子网的任意地址。
如果指定了主机名（不是IP地址范围或看做主机名对待的特殊关键字）， 那么该名称与客户端IP地址进行反向名称解析的结果进行比较（例如，如果使用了DNS， 那么是反向DNS查找）。主机名的比较是大小写无关的。如果有一个匹配， 那么正向名称解析（例如，正向DNS查找）在主机名上执行，以检查是否有解析的地址等于客户端IP地址。 如果双向都匹配，那么这个条目被认为是匹配的。（在pg_hba.conf 中使用的主机名应该是客户端IP地址返回的地址到名称（address-to-name）解析的那个， 否则这行将不被匹配。某些主机名数据库允许一个IP地址关联多个主机名， 但是当要求解析一个IP地址时，操作系统将只返回一个主机名。）
主机名规范以一个点(.)开头，匹配一个实际主机名后缀。 所以.example.com将匹配foo.example.com （但不只是example.com）。
当主机名在pg_hba.conf中指定时，你应该确保那个名字解析是相当快的。 它将比建立一个本地名字解析缓存（如nscd）有优势。同样， 你可能希望启用配置参数log_hostname来查看客户端主机名，而不是日志中的IP地址。
这些字段只适用于host,hostssl和hostnossl记录。
用户有时会想知道为什么主机名用这个看起来复杂的方式处理， 因为需要两个包含反向查找客户端的IP地址的名字解析。 使用这个复杂的特性是为了防止客户端反向DNS项没有设置或者产生一些不受欢迎的主机名。 它主要是为了效率：这种方式，一个连接尝试请求最多需要两次解析查找， 一次反向一次正向。如果有一个解析器对于某些地址有问题，那仅仅是客户端的问题。 一种假想的替代实现是只做前向查找，这种方法不得不在每一次连接尝试时解析 pg_hba.conf中提到的每一个主机名。 如果列出了很多主机名，那么将会相当的慢。并且如果其中一个主机名有解析问题， 那么所有主机名都会有问题。
另外，要实现后缀匹配功能必须要一个反向查找，因为实际客户端主机名需要是已知的，为了它对模式匹配。
请注意，这个行为与其他受欢迎的主机基于名称访问控制的实现是一致的，比如Apache HTTP Server 和 TCP Wrappers。

IP-address
IP-mask
这两个字段可以用作IP-address/mask-length 表示法的替补。它不是声明掩码的长度， 而是在另外一个字段里声明实际的掩码。比如，255.0.0.0表示 IPv4 CIDR 掩码长度 8 ， 而255.255.255.255表示 CIDR 掩码长度 32 。
这些字段只适用于host,hostssl,hostnossl记录。

auth-method
声明连接匹配这条记录的时候使用的认证方法。可能的选择在下面简介， 详细情况在第 19.3 节中介绍。

trust
无条件地允许连接。这个方法允许任何可以与PostgreSQL 数据库服务器连接的用户以他们期望的任意PostgreSQL 数据库用户身份进行连接，而不需要口令或任何其他认证。参阅第 19.3.1 节获取细节。

reject
无条件地拒绝连接。常用于从一个组中"过滤"某些主机，例如， 一个拒绝行能够从连接中锁定一个指定的主机，而稍后的行允许指定网络中的剩余的主机连接。

md5
要求客户端提供一个双重MD5散列的口令进行认证。参阅第 19.3.2 节获取细节。

password
要求客户端提供一个未加密的口令进行认证。因为口令是以明文形式在网络上传递的， 所以我们不应该在不安全的网络上使用这个方式。参阅第 19.3.2 节获取细节。

gss
使用GSSAPI认证用户。这只能用于TCP/IP连接。参阅第 19.3.3 节获取细节。

sspi
使用SSPI认证用户。这只能在Windows上使用。参阅第 19.3.4 节获取细节。

ident
获取客户的操作系统名然后检查该用户是否匹配要求的数据库用户名， 方法是用户的身份通过与运行在客户端上的 ident 服务器连接进行判断的。 Ident认证只在进行TCP/IP连接的时候才能用。当指定本地连接时，将使用peer认证。 参阅第 19.3.5 节获取细节。
peer
为操作系统获取客户端操作系统用户名，并检查该用户是否匹配要求的数据库用户名。 该方法只适用于本地连接。参阅第 19.3.6 节获取细节。
ldap
使用LDAP服务器进行认证。参阅第 19.3.7 节获取细节。
radius
使用RADIUS服务器进行认证，参阅第 19.3.8 节获取细节。
cert
使用SSL客户端证书进行认证。参阅第 19.3.9 节获取细节。
pam
使用操作系统提供的可插入认证模块服务(PAM)来认证。参阅第 19.3.10 节获取细节。
auth-options
在auth-method字段之后，字段格式可以是name=value， 指定认证方法的选项。关于哪个选项可用于哪个认证方法的详情在下面描述。
用@构造包含的文件是当作一列名字读取的，这些名字可以用空白或者逗号分隔。 注释用#引入，就像在pg_hba.conf里那样， 允许嵌套@构造。除非跟在@后面的文件名是一个绝对路径， 否则被当作与该文件所在目录相对的路径。
因为认证时系统是为每个连接请求顺序检查pg_hba.conf里的记录的， 所以这些记录的顺序是非常关键的。通常，靠前的记录有比较严的连接匹配参数和比较弱的认证方法， 而靠后的记录有比较松的匹配参数和比较严的认证方法。比如，我们一般都希望对本地 TCP/IP 连接使用 trust认证，而对远端的 TCP/IP 连接要求口令。在这种情况下我们将trust 认证方法用于来自 127.0.0.1 的连接，这条记录将出现在允许更广泛的客户端 IP 地址的使用口令认证的记录前面。
在启动和主服务器进程收到SIGHUP 信号的时候，系统都会重新装载pg_hba.conf文件。 如果你在活跃的系统上编辑了该文件，就必须通知主服务器(使用pg_ctl reload 或kill -HUP)重新加载该文件。
